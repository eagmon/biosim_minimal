"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addLintingGenerator = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const linter_1 = require("@nrwl/linter");
const lint_project_1 = require("@nrwl/linter/src/generators/lint-project/lint-project");
const run_tasks_in_serial_1 = require("@nrwl/workspace/src/utilities/run-tasks-in-serial");
const path_1 = require("path");
const version_utils_1 = require("../utils/version-utils");
const add_angular_eslint_dependencies_1 = require("./lib/add-angular-eslint-dependencies");
const create_eslint_configuration_1 = require("./lib/create-eslint-configuration");
function addLintingGenerator(tree, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const generatorDirectory = (0, version_utils_1.getGeneratorDirectoryForInstalledAngularVersion)(tree);
        if (generatorDirectory) {
            let previousGenerator = yield Promise.resolve().then(() => require((0, path_1.join)(__dirname, generatorDirectory, 'add-linting')));
            yield previousGenerator.default(tree, options);
            return;
        }
        const tasks = [];
        const rootProject = options.projectRoot === '.' || options.projectRoot === '';
        const lintTask = yield (0, linter_1.lintProjectGenerator)(tree, {
            linter: linter_1.Linter.EsLint,
            project: options.projectName,
            tsConfigPaths: [
                (0, devkit_1.joinPathFragments)(options.projectRoot, 'tsconfig.app.json'),
            ],
            unitTestRunner: options.unitTestRunner,
            eslintFilePatterns: [
                (0, lint_project_1.mapLintPattern)(options.projectRoot, 'ts', rootProject),
                (0, lint_project_1.mapLintPattern)(options.projectRoot, 'html', rootProject),
            ],
            setParserOptionsProject: options.setParserOptionsProject,
            skipFormat: true,
            rootProject: rootProject,
        });
        tasks.push(lintTask);
        (0, devkit_1.updateJson)(tree, (0, devkit_1.joinPathFragments)(options.projectRoot, '.eslintrc.json'), (json) => (0, create_eslint_configuration_1.extendAngularEslintJson)(json, options));
        if (!options.skipPackageJson) {
            const installTask = yield (0, add_angular_eslint_dependencies_1.addAngularEsLintDependencies)(tree);
            tasks.push(installTask);
        }
        return (0, run_tasks_in_serial_1.runTasksInSerial)(...tasks);
    });
}
exports.addLintingGenerator = addLintingGenerator;
exports.default = addLintingGenerator;
//# sourceMappingURL=add-linting.js.map