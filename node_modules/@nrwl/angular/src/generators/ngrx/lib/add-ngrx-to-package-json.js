"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addNgRxToPackageJson = void 0;
const devkit_1 = require("@nrwl/devkit");
const version_utils_1 = require("@nrwl/workspace/src/utilities/version-utils");
const semver_1 = require("semver");
const version_utils_2 = require("../../../utils/version-utils");
const versions_1 = require("../../../utils/versions");
const version_utils_3 = require("../../utils/version-utils");
function addNgRxToPackageJson(tree) {
    let rxjsVersion;
    try {
        rxjsVersion = (0, version_utils_1.checkAndCleanWithSemver)('rxjs', (0, devkit_1.readJson)(tree, 'package.json').dependencies['rxjs']);
    }
    catch (_a) {
        rxjsVersion = (0, version_utils_1.checkAndCleanWithSemver)('rxjs', versions_1.rxjsVersion);
    }
    const jasmineMarblesVersion = (0, semver_1.gte)(rxjsVersion, '7.0.0') ? '~0.9.1' : '~0.8.3';
    const angularMajorVersion = (0, version_utils_3.getInstalledAngularMajorVersion)(tree);
    const ngrxVersion = (0, version_utils_2.getPkgVersionForAngularMajorVersion)('ngrxVersion', angularMajorVersion);
    return (0, devkit_1.addDependenciesToPackageJson)(tree, {
        '@ngrx/store': ngrxVersion,
        '@ngrx/effects': ngrxVersion,
        '@ngrx/entity': ngrxVersion,
        '@ngrx/router-store': ngrxVersion,
        '@ngrx/component-store': ngrxVersion,
    }, {
        '@ngrx/schematics': ngrxVersion,
        '@ngrx/store-devtools': ngrxVersion,
        'jasmine-marbles': jasmineMarblesVersion,
    });
}
exports.addNgRxToPackageJson = addNgRxToPackageJson;
//# sourceMappingURL=add-ngrx-to-package-json.js.map